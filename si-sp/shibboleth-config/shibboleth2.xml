<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config"
    xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
    xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol"    
    xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    clockSkew="180">


    <!--
    By default, in-memory StorageService, ReplayCache, ArtifactMap, and SessionCache
    are used. See example-shibboleth2.xml for samples of explicitly configuring them.
    -->

    <!--
    To customize behavior for specific resources on Apache, and to link vhosts or
    resources to ApplicationOverride settings below, use web server options/commands.
    See https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPConfigurationElements for help.
    
    For examples with the RequestMap XML syntax instead, see the example-shibboleth2.xml
    file, and the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPRequestMapHowTo topic.
    -->
    <!--	
    <RequestMapper type="Native">
     <RequestMap applicationId="default">
       <Host name="https://sp1.fed-db.us">
         <Path name="shib_login.php" authType="shibboleth" requireSession="true">
           <AccessControl>
                <AND>
                        <RuleRegex require="ILIAS_SHIB_AFFILIATION">/\bstudent\b/i</RuleRegex>
                        <RuleRegex require="ILIAS_SHIB_AFFILIATION">/\bstudent\b/i</RuleRegex>
                </AND>
           </AccessControl>
          </Path>
        </Host>
     </RequestMap>
    </RequestMapper>
    -->


    <!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
    <ApplicationDefaults entityID="https://sp1.fed-db.us"
                         REMOTE_USER="eppn persistent-id targeted-id"
			 signing="true"
			 encryption="true">

        <!--
        Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
        You MUST supply an effectively unique handlerURL value for each of your applications.
        The value defaults to /Shibboleth.sso, and should be a relative path, with the SP computing
        a relative value based on the virtual host. Using handlerSSL="true", the default, will force
        the protocol to be https. You should also set cookieProps to "https" for SSL-only sites.
        Note that while we default checkAddress to "false", this has a negative impact on the
        security of your site. Stealing sessions via cookie theft is much easier with this disabled.
        -->
        <Sessions lifetime="28800" timeout="3600" relayState="ss:mem"
                  checkAddress="false" handlerSSL="true" cookieProps="https">

            <!--
            Configures SSO for a default IdP. To allow for >1 IdP, remove
            entityID property and adjust discoveryURL to point to discovery service.
            (Set discoveryProtocol to "WAYF" for legacy Shibboleth WAYF support.)
            You can also override entityID on /Login query string, or in RequestMap/htaccess.
            
	    <SSO entityID="https://idp.example.org/idp/shibboleth" discoveryProtocol="SAMLDS" discoveryURL="https://ds.example.org/DS/WAYF">
		SAML2 SAML1
	    </SSO>
	    -->
		
	    <!--	
	    <SSO entityID="https://idp2.fed-db.us/idp/shibboleth"
                discoveryProtocol="SAMLDS" discoveryURL="https://ds.example.org/DS/WAYF">
                SAML2 SAML1
            </SSO>
	    -->

	    <!-- FOR SZENARIO A + D  -->
            <!--    
	    <SSO entityID="https://idp2.fed-db.us/idp/shibboleth">
                 SAML2 SAML1
            </SSO>
            -->

            <!-- FOR SZENARIO B  -->
            <!--
	    <SSO discoveryProtocol="SAMLDS" discoveryURL="https://sp2.fed-db.us/eds/">
                 SAML2 SAML1
            </SSO>
	    -->

	    <!-- FOR SZENARIO C -->	
	    <SSO discoveryProtocol="SAMLDS" discoveryURL="https://sp1.fed-db.us/eds/">
   		SAML2 SAML1
	    </SSO>

            <!-- SAML and local-only logout. -->
            <Logout>SAML2 Local</Logout>
            
	    <!-- NOT FOR PRODUCTION ENVIROMENT - ONLY FOR TESTING -->
            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
            <Handler type="MetadataGenerator" Location="/Metadata" signing="false"/>

            <!-- Status reporting service. -->
            <Handler type="Status" Location="/Status" acl="127.0.0.1 ::1"/>

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/Session" showAttributeValues="false"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>
        </Sessions>

        <!--
        Allows overriding of error template information/filenames. You can
        also add attributes with values that can be plugged into the templates.
        -->
        <Errors supportContact="root@localhost"
            helpLocation="/about.html"
            styleSheet="/shibboleth-sp/main.css"/>

	<!-- Chain the two built-in trust engines together. -->
        <TrustEngine type="Chaining">
            <TrustEngine type="ExplicitKey"/>
            <TrustEngine type="PKIX"/>
	</TrustEngine>
        


        <!-- Example of remotely supplied batch of signed metadata. -->
        <!--
        <MetadataProvider type="XML" validate="true"
	      uri="http://example.org/federation-metadata.xml"
              backingFilePath="federation-metadata.xml" reloadInterval="7200">
            <MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
            <MetadataFilter type="Signature" certificate="fedsigner.pem"/>
            <DiscoveryFilter type="Blacklist" matcher="EntityAttributes" trimTags="true" 
              attributeName="http://macedir.org/entity-category"
              attributeNameFormat="urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
              attributeValue="http://refeds.org/category/hide-from-discovery" />
        </MetadataProvider>
        -->

        <!--  
	<MetadataProvider type="XML" uri="https://idp1.fed-db.us/idp/shibboleth" backingFilePath="/etc/shibboleth/metadata/metadata.xml" reloadInterval="7200"></MetadataProvider> 
	-->
	
	<!-- FOR SZENARIO A+ D -->
        <!--
        <MetadataProvider type="XML"  validate="true" uri="https://idp1.fed-db.us/idp/shibboleth" backingFilePath="/etc/shibboleth/metadata/metadata.xml" reloadInterval="7200"></MetadataProvider>
        -->

	<!-- FOR SZENARIO B  -->
         <!--
        <MetadataProvider type="XML" validate="true" legacyOrgNames="true" uri="https://idp2.fed-db.us/idp/shibboleth" backingFilePath="/etc/shibboleth/metadata/metadata_idp2.xml" reloadInter$
        <MetadataProvider type="XML" validate="true" legacyOrgNames="true" uri="https://idp1.fed-db.us/idp/shibboleth" backingFilePath="/etc/shibboleth/metadata/metadata_idp1.xml" reloadInter$
        -->
		
	<!-- FOR SZENARIO C -->
       	<MetadataProvider type="XML" validate="true" url="https://metadata.fed-db.us/metadata.xml" backingFilePath="/etc/shibboleth/metadata/metadata.xml" reloadInterval="7200">
		<!-- Verify the signature on the metadata file -->
	      	<!--  <MetadataFilter type="Signature" certificate="/etc/ssl/localcerts/fed-db.pem"/> -->
		<MetadataFilter type="Signature" certificate="/etc/ssl/localcerts/fed-db.pem"/> 

		 <!-- FOR SZENARIO E -->
						 	
		<MetadataFilter type="Whitelist">
                         <Include>https://idp2.fed-db.us/idp/shibboleth</Include>
                </MetadataFilter>
	
		 <!-- FOR SZENARIO F -->
		<!--
		<MetadataFilter type="Blacklist">
    			 <Exclude>https://idp1.fed-db.us/idp/shibboleth</Exclude>
		</MetadataFilter>
		-->
	 </MetadataProvider>
		
        <!-- Example of locally maintained metadata. -->
        <!--
        <MetadataProvider type="XML" validate="true" file="partner-metadata.xml"/>
        -->

        <!-- Map to extract attributes from SAML assertions. -->
        <AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>
        
        <!-- Use a SAML query if no attributes are supplied during SSO. -->
        <AttributeResolver type="Query" subjectMatch="true"/>

        <!-- Default filtering policy for recognized attributes, lets other data pass. -->
        <AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

        <!-- Simple file-based resolver for using a single keypair. -->
        <!-- <CredentialResolver type="File" key="sp-key.pem" certificate="sp-cert.pem"/> -->
	<!-- #<CredentialResolver type="File" key="/etc/ssl/localcerts/apache.key" certificate="/etc/ssl/localcerts/apache.pem"/> -->
        <CredentialResolver type="File" key="/etc/ssl/localcerts/sp-cert.key" certificate="/etc/ssl/localcerts/sp-cert.pem"/>

	<!--
        The default settings can be overridden by creating ApplicationOverride elements (see
        the https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPApplicationOverride topic).
        Resource requests are mapped by web server commands, or the RequestMapper, to an
        applicationId setting.
        
        Example of a second application (for a second vhost) that has a different entityID.
        Resources on the vhost would map to an applicationId of "admin":
        -->
        <!--
        <ApplicationOverride id="admin" entityID="https://admin.example.org/shibboleth"/>
        -->
    </ApplicationDefaults>

    <!-- Policies that determine how to process and authenticate runtime messages. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
